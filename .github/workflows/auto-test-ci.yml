name: CI Automation Test - Build and Run Test

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

defaults:
  run:
    working-directory: './AutomationTest'

jobs:
  playwright-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        totalShards: [2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers and System Dependencies
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --grep "@SmokeTest" --shard=${{ matrix.shardIndex }}/${{ matrix.totalShards }}
        env:
          BASE_FE_URL: ${{ secrets.BASE_FE_URL }}
          BASE_BE_URL: ${{ secrets.BASE_BE_URL }}
          ADMIN_USER_NAME: ${{ secrets.ADMIN_USER_NAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          LEARNER_USER_NAME: ${{ secrets.LEARNER_USER_NAME }}
          LEARNER_PASSWORD: ${{ secrets.LEARNER_PASSWORD }}
          MENTOR_USER_NAME: ${{ secrets.MENTOR_USER_NAME }}
          MENTOR_PASSWORD: ${{ secrets.MENTOR_PASSWORD }}

      - name: Publish JUnit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-${{ matrix.shardIndex }}
          path: AutomationTest/test-results/junit-report.xml

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-report-${{ matrix.shardIndex }}
          path: AutomationTest/test-results/html-report
